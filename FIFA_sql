# database from kaggle
# http://stackoverflow.com/questions/26336251/pandas-rename-single-dataframe-column-without-knowing-column-name
# ideas: regression stats against match performance - is str important
# cluster player types
import sqlite3
from pandasql import sqldf
import pandas as pd
from dateutil.parser import parse
from datetime import datetime
import xlrd
from pandas import ExcelWriter
from numbers import Number

sqlite_file = 'database.sqlite'
conn = sqlite3.connect(sqlite_file)
c = conn.cursor()
c.execute("SELECT name FROM sqlite_master WHERE type='table';")
print(c.fetchall())



player = pd.read_sql_query("""
                           select * from Player;
                           """, 
                           conn)
                           
Player_Attributes = pd.read_sql_query("""
                           select * from Player_Attributes;
                           """, 
                           conn)

df_players_combine = pd.merge(left=Player_Attributes, right=player, how='left', left_on='player_api_id', right_on='player_api_id')

df_player_filter = df_players_combine[(df_players_combine['player_api_id'] == 30859)]

matches = pd.read_sql_query("""
                           select * from Match;
                           """, 
                           conn)
                           
teams = pd.read_sql_query("""
                           select * from Team;
                           """, 
                           conn)

df_match_home = pd.merge(left=matches, right=teams, how='left', left_on='home_team_api_id', right_on='team_api_id')

df_match_home.rename(columns={'team_api_id':'home_team_id', 'team_fifa_api_id': 'home_team_fifa_id', 'team_long_name':'home_team', 'team_short_name': 'home_team_short'}, inplace=True)

df_match_combined = pd.merge(left=df_match_home, right=teams, how='left', left_on='away_team_api_id', right_on='team_api_id')

df_match_combined.rename(columns={'team_api_id':'away_team_id', 'team_fifa_api_id': 'away_team_fifa_id', 'team_long_name':'away_team', 'team_short_name': 'away_team_short'}, inplace=True)
df_ArsHomeMatch_filter = df_match_combined[(df_match_combined['home_team'] == 'Arsenal')]
df_ArsAwayMatch_filter = df_match_combined[(df_match_combined['away_team'] == 'Arsenal')]
df_ArsHomePlayers = df_ArsHomeMatch_filter.iloc[:, 55:66]
df_ArsAwayPlayers = df_ArsAwayMatch_filter.iloc[:, 66:77]
home_players_list = pd.unique(df_ArsHomePlayers.values.ravel())
away_players_list = pd.unique(df_ArsAwayPlayers.values.ravel())

df_match_filter = df_match_filter.sort_values(['stage'], ascending=[1])

writer = ExcelWriter('fifa_kaggle.xlsx')
df_match_filter.to_excel(writer,'Full Table')
writer.save()

